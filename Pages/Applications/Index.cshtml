@page
@model InternshipTracker.Pages.Applications.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Application Index</h1>

<p>
    <a class="btn btn-outline-primary" asp-page="Create">Create New</a>
</p>

<div class="row">
    <div class="col-md-6">
        <form id="searchForm" method="get">
            <div class="input-group">
                <input id="SearchTextBox" class="form-control" asp-for="SearchString" placeholder="Search" />
            </div>
        </form>
    </div>
</div>    

@* add select button operations *@

<div class="row" id="selectOptionsContainer">
    <div class="col-sm-8">
        <form method="post" id="SelectOptionForm" class="">
            @Html.AntiForgeryToken()
            <div class="form-group row">
                <div class="col-md-6">
                    <select asp-for="@Model.IndexSelectOptionId" asp-items="@Model.IndexSelectOptions" class="form-control" id="selectOptionString">
                        <option>
                            Choose an option
                        </option>
                    </select>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-outline-primary form-row">
                        Apply
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<table class="table" id="itemTable">
    <thead>
        <tr>
            <th>
                Select
            </th> 
            <th>
                Company
            </th>
            <th>
                Role
            </th>
            <th>
                Status
            </th>
            <th>
                OA?
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.InternshipApplications) {
        <tr>
            <td>
                <form id="selectForm">
                    <input type="checkbox" class="item-checkbox" data-item-id="@item.Id" />
                </form>
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Company.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Position)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NeedToTakeOA)
            </td>
            <td>
                <div class="list-inline">
                    <div class="list-inline-item">
                        <a class="btn btn-outline-warning" asp-page="./Edit" asp-route-id="@item.Id">Edit</a>
                    </div>
                    <div class="list-inline-item">
                        <a class="btn btn-outline-info" asp-page="./Details" asp-route-id="@item.Id">Details</a>
                    </div>
                    <div class="list-inline-item">
                        <form id="deleteForm" method="post" asp-page-handler="Delete" asp-route-id="@item.Id">
                            <button type="submit" class="btn btn-outline-danger">
                                Delete
                            </button>
                        </form>
                    </div>
                    @if (item.StatusId != 6)
                    {
                        <div class="list-inline-item">
                            <form id="rejectedForm" method="post" asp-page-handler="SetRejected" asp-route-id="@item.Id">
                                <button type="submit" class="btn btn-outline-dark">
                                    Set as Rejected
                                </button>
                            </form>
                        </div>
                    }
                </div>
            </td>
        </tr>
}
    </tbody>
</table>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        var selectedItemIds = [];
        $(document).ready(function () {
            if (selectedItemIds.length < 1) {
                $('#selectOptionsContainer').hide();
            } else {
                $('#selectOptionsContainer').show();
            }
        });
            
        $('#SearchTextBox').change(function () {
            $('searchForm').submit();
        });

        $('#deleteForm').submit(function(event) {
            event.preventDefault();
            if (confirm('Are you sure you want to delete this?')) {
                this.submit();
            }
        });

        $('#rejectedForm').submit(function(event) {
            event.preventDefault();
            if (confirm('Are you sure you want to set this as rejected?')) {
                this.submit();
            }
        });

        //updates selectedIds on table change
        $('#itemTable').on('change', '.item-checkbox', function () {
            var itemId = $(this).data('item-id');
            if ($(this).is(':checked')) {
                if ($.inArray(itemId, selectedItemIds) === -1) {
                        selectedItemIds.push(itemId);
                    }
            } else {
                selectedItemIds = $.grep(selectedItemIds, function (value) {
                    return value != itemId;
                });
            }
            if (selectedItemIds < 1) {
                $('#selectOptionsContainer').hide();
            } else {
                $('#selectOptionsContainer').show();
            }
        });

        //handles the events for the apply button
        $('#SelectOptionForm').submit(function (event) {
            event.preventDefault();

            var selectedOptionId = $('#selectOptionString').val();
            var token = $('#SelectOptionForm input[name="__RequestVerificationToken"]').val();
            console.log("Is string", jQuery.type(selectedOptionId));

            if (selectedOptionId != 0) {
                $.ajax({
                    type: "POST",
                    url: "/Applications/Index?handler=SetIndexesToOption",
                    data: { ids: selectedItemIds
                        , selectedStatusId: selectedOptionId
                        , __RequestVerificationToken: token  },  // sends as ids=1&ids=2&ids=3
                    traditional: true,
                    success: function (res) {
                        window.location.href = "/Applications/Index";
                    },
                    error: function (xhr) {
                        console.error("Error:", xhr.status, xhr.responseText);
                    }
                });
            }
        });

    </script>
}